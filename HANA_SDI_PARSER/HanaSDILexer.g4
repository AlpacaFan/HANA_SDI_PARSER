

lexer grammar HanaSDILexer;


WHITESPACE:                               [ \t\r\n]+    -> skip;

// operators
SYM_STAR:'*';
SYM_DIV:'/';
SYM_PLUS:'+';
SYM_MINUS:'-';

SYM_EQ:'=';
SYM_GT:'>';
SYM_GE:'>=';
SYM_LT:'<';
SYM_LE:'<=';
SYM_NE:'!=' | '<>';

SYM_CONCAT:'||';

SYM_LBRACKET: '(';
SYM_RBRACKET: ')';
SYM_COMMA: ',';
SYM_DOT:'.';



// literals


LIT_STRING:'\'' ('\'\'' | ~('\'') )* '\'';
LIT_UNICODESTRING: 'N\'' ('\'\'' | ~('\'') )* '\'';
LIT_BINSTRING: 'X\'' ([0-9a-fA-F])* '\'';

LIT_INT:   ('-'|'+')?[0-9]+;
LIT_HEXINT: '0x'[0-9a-fA-F]+;
LIT_DECIMAL: ('-'|'+')?[0-9]+ ('.' [0-9]+)?  ( ('e'|'E') ('-'|'+')? [0-9]+)?; 


fragment DATE_PART: [0-9][0-9][0-9][0-9]'-'[0-1][0-9]'-'[0-3][0-9];
fragment TIME_PART: [0-2][0-9]' '[0-5][0-9]' '[0-5][0-9];

LIT_DATE: 'date\'' DATE_PART '\'';
LIT_TIME: 'time\'' TIME_PART '\'';
LIT_TIMESTAMP: 'timestamp\'' DATE_PART ' ' TIME_PART '\'';


// keywords (RESERVED_KEYWORDS system view)
ALL:'ALL';
ALTER:'ALTER';
AS:'AS';
BEFORE:'BEFORE';
BEGIN:'BEGIN';
BOTH:'BOTH';
CASE:'CASE';
CHAR:'CHAR';
CONDITION:'CONDITION';
CONNECT:'CONNECT';
CROSS:'CROSS';
CUBE:'CUBE';
CURRENT_CONNECTION:'CURRENT_CONNECTION';
CURRENT_DATE:'CURRENT_DATE';
CURRENT_SCHEMA:'CURRENT_SCHEMA';
CURRENT_TIME:'CURRENT_TIME';
CURRENT_TIMESTAMP:'CURRENT_TIMESTAMP';
CURRENT_TRANSACTION_ISOLATION_LEVEL:'CURRENT_TRANSACTION_ISOLATION_LEVEL';
CURRENT_USER:'CURRENT_USER';
CURRENT_UTCDATE:'CURRENT_UTCDATE';
CURRENT_UTCTIME:'CURRENT_UTCTIME';
CURRENT_UTCTIMESTAMP:'CURRENT_UTCTIMESTAMP';
CURRVAL:'CURRVAL';
CURSOR:'CURSOR';
DECLARE:'DECLARE';
DISTINCT:'DISTINCT';
ELSE:'ELSE';
ELSEIF:'ELSEIF';
END:'END';
EXCEPT:'EXCEPT';
EXCEPTION:'EXCEPTION';
EXEC:'EXEC';
FALSE:'FALSE';
FOR:'FOR';
FROM:'FROM';
FULL:'FULL';
GROUP:'GROUP';
HAVING:'HAVING';
IF:'IF';
IN:'IN';
INNER:'INNER';
INOUT:'INOUT';
INTERSECT:'INTERSECT';
INTO:'INTO';
IS:'IS';
JOIN:'JOIN';
LEADING:'LEADING';
LEFT:'LEFT';
LIMIT:'LIMIT';
LOOP:'LOOP';
MINUS:'MINUS';
NATURAL:'NATURAL';
NCHAR:'NCHAR';
NEXTVAL:'NEXTVAL';
NULL:'NULL';
ON:'ON';
ORDER:'ORDER';
OUT:'OUT';
PRIOR:'PRIOR';
RETURN:'RETURN';
RETURNS:'RETURNS';
REVERSE:'REVERSE';
RIGHT:'RIGHT';
ROLLUP:'ROLLUP';
ROWID:'ROWID';
SELECT:'SELECT';
SESSION_USER:'SESSION_USER';
SET:'SET';
SQL:'SQL';
START:'START';
SYSUUID:'SYSUUID';
TABLESAMPLE:'TABLESAMPLE';
TOP:'TOP';
TRAILING:'TRAILING';
TRUE:'TRUE';
UNION:'UNION';
UNKNOWN:'UNKNOWN';
USING:'USING';
UTCTIMESTAMP:'UTCTIMESTAMP';
VALUES:'VALUES';
WHEN:'WHEN';
WHERE:'WHERE';
WHILE:'WHILE';
WITH:'WITH';

// keywords not in system view
LIKE:'LIKE';
NOT: 'NOT';
AND: 'AND';
OR:  'OR';
THEN: 'THEN';
BY: 'BY';
ASC: 'ASC';
DESC: 'DESC';
NULLS: 'NULLS';
FIRST: 'FIRST';
LAST: 'LAST';
OVER:'OVER';
PARTITION:'PARTITION';
BETWEEN: 'BETWEEN';
OUTER: 'OUTER';
EXISTS:'EXISTS';


// data types 
// https://help.sap.com/viewer/4fe29514fd584807ac9f2a04f6754767/2.0.03/en-US/20a1569875191014b507cf392724b7eb.html
DATE:'DATE';
DAYDATE:'DAYDATE';
TINYINT:'TINYINT';
BOOLEAN:'BOOLEAN';
VARCHAR:'VARCHAR';
VARBINARY:'VARBINARY';
BLOB:'BLOB';
ARRAY:'ARRAY';
ST_GEOMETRY:'ST_GEOMETRY';
TIME:'TIME';
SMALLINT:'SMALLINT';
NVARCHAR:'NVARCHAR';
CLOB:'CLOB';
ST_POINT:'ST_POINT';
SECONDDATE:'SECONDDATE';
INTEGER:'INTEGER';
ALPHANUM:'ALPHANUM';
NCLOB:'NCLOB';
TIMESTAMP:'TIMESTAMP';
BIGINT:'BIGINT';
SHORTTEXT:'SHORTTEXT';
TEXT:'TEXT';
SMALLDECIMAL:'SMALLDECIMAL';
DECIMAL:'DECIMAL';
REAL:'REAL';
DOUBLE:'DOUBLE';




// aggregation and window functions
CORR:'CORR';
CORR_SPEARMAN:'CORR_SPEARMAN';
COUNT:'COUNT';
MIN:'MIN';
MEDIAN:'MEDIAN';
MAX:'MAX';
SUM:'SUM';
AVG:'AVG';
STDDEV:'STDDEV';
VAR:'VAR';
STDDEV_POP:'STDDEV_POP';
VAR_POP:'VAR_POP';
STDDEV_SAMP:'STDDEV_SAMP';
VAR_SAMP:'VAR_SAMP';
BINNING:'BINNING';
CUBIC_SPLINE_APPROX:'CUBIC_SPLINE_APPROX';
CUME_DIST:'CUME_DIST';
DENSE_RANK:'DENSE_RANK';
LAG:'LAG';
LEAD:'LEAD';
LINEAR_APPROX:'LINEAR_APPROX';
NTILE:'NTILE';
PERCENT_RANK:'PERCENT_RANK';
RANDOM_PARTITION:'RANDOM_PARTITION';
RANK:'RANK';
ROW_NUMBER:'ROW_NUMBER';
SERIES_FILTER:'SERIES_FILTER';
STRING_AGG:'STRING_AGG';
WEIGHTED_AVG:'WEIGHTED_AVG';
FIRST_VALUE:'FIRST_VALUE';
NTH_VALUE:'NTH_VALUE';
LAST_VALUE:'LAST_VALUE';


// other special functions
CAST:'CAST';

// window function syntax


// identifiers
fragment UNQUOTED_ID: ([a-zA-Z]|'_') ([a-zA-Z0-9]|'_')*;



IDENTIFIER:  UNQUOTED_ID;
QUOTED_IDENTIFIER: '"' UNQUOTED_ID '"';

  
